# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@1.3.2

jobs:
  validate:
    docker:
      - image: hashicorp/packer:1.1.1
        # auth:
        #   username: $DOCERHUB_ID
        #   password: $DOCKERHUB_PASSWORD
    working_directory: ~/packer
    steps:
      - checkout
      - run:
          name: Validate base
          command: packer validate -var "aws_region=us-west-2" ./base/base.json 
      - run:
          name: Validate snowflake
          command: packer validate -var "aws_region=us-west-2" ./snowflake/snowflake.json 
  build-base:
    docker:
      - image: hashicorp/packer:1.1.1
        # auth:
        #   username: $DOCERHUB_ID
        #   password: $DOCKERHUB_PASSWORD
    working_directory: ~/packer
    steps:
      - checkout
      - attach_workspace:
          at: ~/packer
      - run:
          name: Build base
          command: >-
              pwd &&
              chmod -R +x ./scripts/ && 
              ./scripts/build.sh base ./base/base.json 
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - manifest-base.json
      - store_artifacts:
          path: manifest-base.json
  build-snowflake:
    docker:
      - image: hashicorp/packer:1.1.1
        # auth:
        #   username: $DOCERHUB_ID
        #   password: $DOCKERHUB_PASSWORD
    working_directory: ~/packer
    steps:
      - checkout
      - attach_workspace:
          at: ~/packer
      - run:
          name: Build snowflake
          command: ./scripts/build.sh secondary ./snowflake/snowflake.json
      - store_artifacts:
            path: manifest-snowflake.json
  canary-snowflake:
    docker:
      - image: hashicorp/pakcer:1.1.1
        # auth:
        #   username: $DOCERHUB_ID
        #   password: $DOCKERHUB_PASSWORD
    working_directory: ~/packer
    steps:
      - checkout
      - attach_workspace:
          at: ~/packer
      - run:
          name: Install JQ
          command: apk --no-cache add jq
      - run:
          name: Deploy canary
          command: ./scripts/deploy-master-canary.sh

  aws-cli-setup:
    executor: aws-cli/default
    # environment:
    #     AWS_ACCESS_KEY_ID: 
    #     AWS_SECRET_ACCESS_KEY: 
    #     AWS_DEFAULT_REGION : us-west-2
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run:
         command: |
               echo Run your code here
               pwd
               echo "This is pipeline ID << pipeline.id >> ${AWS_DEFAULT_REGION}}"
               aws --version
               aws ec2 describe-instances
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run

  aws-cli:
     jobs:
      - aws-cli-setup

  build-and-deploy:
    jobs:
      - validate
      - build-base:
          requires:
            - validate
      - build-snowflake:
          requires:
            - validate
            - build-base
      - canary-snowflake:
          requires:
            - build-snowflake 

